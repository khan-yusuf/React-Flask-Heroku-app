{"version":3,"sources":["components/MyComponent.js","App.js","reportWebVitals.js","index.js"],"names":["MyComponent","useState","name","setName","lastName","setLastName","type","value","onChange","e","target","Button","variant","onClick","fetch","then","response","json","data","output","catch","error","console","log","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAIe,SAASA,IACpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,OACI,8BACE,iCACE,8EAAoD,uBAClD,uBACEC,KAAK,OACLC,MAAOL,EACPM,SAAY,SAACC,GAAD,OAAON,EAAQM,EAAEC,OAAOH,UACpC,uBACJ,cAACI,EAAA,EAAD,CAAQC,QAAQ,WACdC,QACE,WACEC,MAAM,SAAWZ,GACda,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJb,EAAYa,EAAKC,WAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAPtC,oBAUgB,uBAAK,uBACrB,uDAA0BjB,UCdvBoB,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACzB,EAAD,IADF,UCMS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc1e8a1c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport '../App.css';\n\nexport default function MyComponent() {\n    const [name, setName] = useState(\"\"); //for firstname for user\n    const [lastName, setLastName] = useState(\"\"); //for output\n    return(\n        <div>\n          <form>\n            <h>Type in the first name of a spiderman actor! </h><br/>\n              <input //input form for getting firstname from user\n                type=\"text\"\n                value={name}\n                onChange = {(e) => setName(e.target.value)} //allows user to type in textbox\n              /><br/>\n            <Button variant=\"outlined\"\n              onClick={\n                () => {\n                  fetch(\"/find/\" + name) //the address to fetch, uses routing\n                    .then(response => response.json())\n                    .then(data => {\n                      setLastName(data.output) //updates value of Lastname\n                    }).catch(error => console.log(error))\n                }\n              }\n            >Submit</Button><br/><br/>\n            <label>His last name is: {lastName}</label> \n          </form>\n        </div>\n    );\n}\n","import './App.css';\nimport MyComponent from \"./components/MyComponent.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MyComponent /> {/* calls the component for firstname and lastname */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}